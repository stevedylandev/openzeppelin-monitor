---
name: Build and push Docker image
on:
  workflow_call:
    inputs:
      tag:
        type: string
        description: The tag to use for the Docker image.
        required: true
jobs:
  build-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: release
    env:
      DOCKERHUB_IMAGE: openzeppelin/openzeppelin-monitor
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SLACK_CHANNEL: '#oss-releases'
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - name: Slack notification
        uses: act10ns/slack@44541246747a30eb3102d87f7a4cc5471b0ffb7d # v2.1.0
        with:
          status: starting
          steps: ${{ toJson(steps) }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: Starting docker build and push to dockerhub for ${{ github.repository }} with tag ${{ inputs.tag }}......
        if: always()
      - name: Get github app token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Checkout release branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ inputs.tag }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.DOCKERHUB_IMAGE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,value=${{ inputs.tag }},pattern={{version}}
            type=sha,value=${{ github.event.inputs.commit }}
            type=raw,value=${{ inputs.tag }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.created={{commit_date 'YYYY-MM-DDTHH:mm:ss.SSS[Z]'}}
            org.opencontainers.image.title="openzeppelin-monitor"
            org.opencontainers.image.vendor="openzeppelin"
            org.opencontainers.image.description="Blockchain monitoring service that watches for specific onchain activities and triggers notifications based on configurable conditions."
            org.opencontainers.image.documentation="https://docs.openzeppelin.com/monitor"
        env:
          DOCKER_METADATA_SHORT_SHA_LENGTH: 10
      - name: Login to Dockerhub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@e77e8065d9f7ec6abdd9838668cd7b43924dd64d # main
        with:
          platforms: linux/amd64,linux/arm64
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Build Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build
        with:
          context: .
          push: true
          file: ./Dockerfile.production
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Attest
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        id: attest
        with:
          subject-name: docker.io/${{ env.DOCKERHUB_IMAGE }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: false
          github-token: ${{ steps.gh-app-token.outputs.token }}
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@31b7155ea9926ec41d93d6c52a18d3022bfd128a
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
          repository: ${{ env.DOCKERHUB_IMAGE }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./DOCKER_README.md
      - name: Slack notification success or failure
        uses: act10ns/slack@44541246747a30eb3102d87f7a4cc5471b0ffb7d # v2.1.0
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: Push to Dockerhub ${{ job.status }}!
        if: always()
      - name: Print image digest to summary
        run: |-
          echo "Image tags: ${{ steps.meta.outputs.tags }}" >> "${GITHUB_STEP_SUMMARY}"
          echo "Image labels: ${{ steps.meta.outputs.labels }}" >> "${GITHUB_STEP_SUMMARY}"
